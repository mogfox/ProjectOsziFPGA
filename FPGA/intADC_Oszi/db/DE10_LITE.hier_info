|DE10_LITE
MAX10_CLK1_50 => DataUnit:dataFrontEnd.CLK
MAX10_CLK1_50 => grafic_gen:grafic_generator.CLK
MAX10_CLK1_50 => IO:INandOUT.CLK
KEY[0] => IO:INandOUT.KEY[0]
KEY[1] => IO:INandOUT.KEY[1]
SW[0] => IO:INandOUT.SW[0]
SW[1] => IO:INandOUT.SW[1]
SW[2] => IO:INandOUT.SW[2]
SW[3] => IO:INandOUT.SW[3]
SW[4] => IO:INandOUT.SW[4]
SW[5] => IO:INandOUT.SW[5]
SW[6] => IO:INandOUT.SW[6]
SW[7] => IO:INandOUT.SW[7]
SW[8] => IO:INandOUT.SW[8]
SW[9] => IO:INandOUT.SW[9]
LEDR[0] << IO:INandOUT.LEDR[0]
LEDR[1] << IO:INandOUT.LEDR[1]
LEDR[2] << IO:INandOUT.LEDR[2]
LEDR[3] << IO:INandOUT.LEDR[3]
LEDR[4] << IO:INandOUT.LEDR[4]
LEDR[5] << IO:INandOUT.LEDR[5]
LEDR[6] << IO:INandOUT.LEDR[6]
LEDR[7] << IO:INandOUT.LEDR[7]
LEDR[8] << IO:INandOUT.LEDR[8]
LEDR[9] << IO:INandOUT.LEDR[9]
GPIO[35] <> IO:INandOUT.GPIO[35]
GPIO[34] <> IO:INandOUT.GPIO[34]
GPIO[33] <> IO:INandOUT.GPIO[33]
GPIO[32] <> IO:INandOUT.GPIO[32]
GPIO[31] <> IO:INandOUT.GPIO[31]
GPIO[30] <> IO:INandOUT.GPIO[30]
GPIO[29] <> IO:INandOUT.GPIO[29]
GPIO[28] <> IO:INandOUT.GPIO[28]
GPIO[27] <> IO:INandOUT.GPIO[27]
GPIO[26] <> IO:INandOUT.GPIO[26]
GPIO[25] <> IO:INandOUT.GPIO[25]
GPIO[24] <> IO:INandOUT.GPIO[24]
GPIO[23] <> IO:INandOUT.GPIO[23]
GPIO[22] <> IO:INandOUT.GPIO[22]
GPIO[21] <> IO:INandOUT.GPIO[21]
GPIO[20] <> IO:INandOUT.GPIO[20]
GPIO[19] <> IO:INandOUT.GPIO[19]
GPIO[18] <> IO:INandOUT.GPIO[18]
GPIO[17] <> IO:INandOUT.GPIO[17]
GPIO[16] <> IO:INandOUT.GPIO[16]
GPIO[15] <> IO:INandOUT.GPIO[15]
GPIO[14] <> IO:INandOUT.GPIO[14]
GPIO[13] <> IO:INandOUT.GPIO[13]
GPIO[12] <> IO:INandOUT.GPIO[12]
GPIO[11] <> IO:INandOUT.GPIO[11]
GPIO[10] <> IO:INandOUT.GPIO[10]
GPIO[9] <> IO:INandOUT.GPIO[9]
GPIO[8] <> IO:INandOUT.GPIO[8]
GPIO[7] <> IO:INandOUT.GPIO[7]
GPIO[6] <> IO:INandOUT.GPIO[6]
GPIO[5] <> IO:INandOUT.GPIO[5]
GPIO[4] <> IO:INandOUT.GPIO[4]
GPIO[3] <> IO:INandOUT.GPIO[3]
GPIO[2] <> IO:INandOUT.GPIO[2]
GPIO[1] <> IO:INandOUT.GPIO[1]
GPIO[0] <> IO:INandOUT.GPIO[0]
VGA_R[0] << grafic_gen:grafic_generator.VGA_R_out[0]
VGA_R[1] << grafic_gen:grafic_generator.VGA_R_out[1]
VGA_R[2] << grafic_gen:grafic_generator.VGA_R_out[2]
VGA_R[3] << grafic_gen:grafic_generator.VGA_R_out[3]
VGA_G[0] << grafic_gen:grafic_generator.VGA_G_out[0]
VGA_G[1] << grafic_gen:grafic_generator.VGA_G_out[1]
VGA_G[2] << grafic_gen:grafic_generator.VGA_G_out[2]
VGA_G[3] << grafic_gen:grafic_generator.VGA_G_out[3]
VGA_B[0] << grafic_gen:grafic_generator.VGA_B_out[0]
VGA_B[1] << grafic_gen:grafic_generator.VGA_B_out[1]
VGA_B[2] << grafic_gen:grafic_generator.VGA_B_out[2]
VGA_B[3] << grafic_gen:grafic_generator.VGA_B_out[3]
VGA_HS << grafic_gen:grafic_generator.VGA_HS_out
VGA_VS << grafic_gen:grafic_generator.VGA_VS_out
HEX0[0] << IO:INandOUT.HEX0[0]
HEX0[1] << IO:INandOUT.HEX0[1]
HEX0[2] << IO:INandOUT.HEX0[2]
HEX0[3] << IO:INandOUT.HEX0[3]
HEX0[4] << IO:INandOUT.HEX0[4]
HEX0[5] << IO:INandOUT.HEX0[5]
HEX0[6] << IO:INandOUT.HEX0[6]
HEX0[7] << IO:INandOUT.HEX0[7]
HEX1[0] << IO:INandOUT.HEX1[0]
HEX1[1] << IO:INandOUT.HEX1[1]
HEX1[2] << IO:INandOUT.HEX1[2]
HEX1[3] << IO:INandOUT.HEX1[3]
HEX1[4] << IO:INandOUT.HEX1[4]
HEX1[5] << IO:INandOUT.HEX1[5]
HEX1[6] << IO:INandOUT.HEX1[6]
HEX1[7] << IO:INandOUT.HEX1[7]
HEX2[0] << IO:INandOUT.HEX2[0]
HEX2[1] << IO:INandOUT.HEX2[1]
HEX2[2] << IO:INandOUT.HEX2[2]
HEX2[3] << IO:INandOUT.HEX2[3]
HEX2[4] << IO:INandOUT.HEX2[4]
HEX2[5] << IO:INandOUT.HEX2[5]
HEX2[6] << IO:INandOUT.HEX2[6]
HEX2[7] << IO:INandOUT.HEX2[7]
HEX3[0] << IO:INandOUT.HEX3[0]
HEX3[1] << IO:INandOUT.HEX3[1]
HEX3[2] << IO:INandOUT.HEX3[2]
HEX3[3] << IO:INandOUT.HEX3[3]
HEX3[4] << IO:INandOUT.HEX3[4]
HEX3[5] << IO:INandOUT.HEX3[5]
HEX3[6] << IO:INandOUT.HEX3[6]
HEX3[7] << IO:INandOUT.HEX3[7]
HEX4[0] << IO:INandOUT.HEX4[0]
HEX4[1] << IO:INandOUT.HEX4[1]
HEX4[2] << IO:INandOUT.HEX4[2]
HEX4[3] << IO:INandOUT.HEX4[3]
HEX4[4] << IO:INandOUT.HEX4[4]
HEX4[5] << IO:INandOUT.HEX4[5]
HEX4[6] << IO:INandOUT.HEX4[6]
HEX4[7] << IO:INandOUT.HEX4[7]
HEX5[0] << IO:INandOUT.HEX5[0]
HEX5[1] << IO:INandOUT.HEX5[1]
HEX5[2] << IO:INandOUT.HEX5[2]
HEX5[3] << IO:INandOUT.HEX5[3]
HEX5[4] << IO:INandOUT.HEX5[4]
HEX5[5] << IO:INandOUT.HEX5[5]
HEX5[6] << IO:INandOUT.HEX5[6]
HEX5[7] << IO:INandOUT.HEX5[7]


|DE10_LITE|DataUnit:dataFrontEnd
RESET_n => ADC_clock_divider:ADC_CLK_divider.areset
RESET_n => intADC:ADC1.reset_sink_reset_n
RESET_n => Command_counter[0].ACLR
RESET_n => Command_counter[1].ACLR
RESET_n => Command_counter[2].ACLR
RESET_n => Command_counter[3].ACLR
RESET_n => Command_counter[4].ACLR
RESET_n => Command_counter[5].ACLR
RESET_n => Command_counter[6].ACLR
RESET_n => Command_counter[7].ACLR
RESET_n => Command_counter[8].ACLR
RESET_n => Command_counter[9].ACLR
RESET_n => Command_counter[10].ACLR
RESET_n => Command_counter[11].ACLR
RESET_n => Command_counter[12].ACLR
RESET_n => Command_counter[13].ACLR
RESET_n => Command_counter[14].ACLR
RESET_n => Command_counter[15].ACLR
RESET_n => Command_counter[16].ACLR
RESET_n => Command_counter[17].ACLR
RESET_n => Command_counter[18].ACLR
RESET_n => Command_counter[19].ACLR
RESET_n => Command_counter[20].ACLR
RESET_n => Command_counter[21].ACLR
RESET_n => Command_counter[22].ACLR
RESET_n => Command_counter[23].ACLR
RESET_n => Command_counter[24].ACLR
RESET_n => Command_counter[25].ACLR
RESET_n => Command_counter[26].ACLR
RESET_n => Command_counter[27].ACLR
RESET_n => Command_counter[28].ACLR
RESET_n => Command_counter[29].ACLR
RESET_n => Command_counter[30].ACLR
RESET_n => CONNECTED_TO_command_endofpacket.ACLR
RESET_n => CONNECTED_TO_command_startofpacket.ACLR
CLK => ADC_clock_divider:ADC_CLK_divider.inclk0
CLK => Command_counter[0].CLK
CLK => Command_counter[1].CLK
CLK => Command_counter[2].CLK
CLK => Command_counter[3].CLK
CLK => Command_counter[4].CLK
CLK => Command_counter[5].CLK
CLK => Command_counter[6].CLK
CLK => Command_counter[7].CLK
CLK => Command_counter[8].CLK
CLK => Command_counter[9].CLK
CLK => Command_counter[10].CLK
CLK => Command_counter[11].CLK
CLK => Command_counter[12].CLK
CLK => Command_counter[13].CLK
CLK => Command_counter[14].CLK
CLK => Command_counter[15].CLK
CLK => Command_counter[16].CLK
CLK => Command_counter[17].CLK
CLK => Command_counter[18].CLK
CLK => Command_counter[19].CLK
CLK => Command_counter[20].CLK
CLK => Command_counter[21].CLK
CLK => Command_counter[22].CLK
CLK => Command_counter[23].CLK
CLK => Command_counter[24].CLK
CLK => Command_counter[25].CLK
CLK => Command_counter[26].CLK
CLK => Command_counter[27].CLK
CLK => Command_counter[28].CLK
CLK => Command_counter[29].CLK
CLK => Command_counter[30].CLK
CLK => CONNECTED_TO_command_endofpacket.CLK
CLK => CONNECTED_TO_command_startofpacket.CLK
CLK => intADC:ADC1.clock_clk
ADC_CH1_value_i[0] <= intADC:ADC1.response_data[0]
ADC_CH1_value_i[1] <= intADC:ADC1.response_data[1]
ADC_CH1_value_i[2] <= intADC:ADC1.response_data[2]
ADC_CH1_value_i[3] <= intADC:ADC1.response_data[3]
ADC_CH1_value_i[4] <= intADC:ADC1.response_data[4]
ADC_CH1_value_i[5] <= intADC:ADC1.response_data[5]
ADC_CH1_value_i[6] <= intADC:ADC1.response_data[6]
ADC_CH1_value_i[7] <= intADC:ADC1.response_data[7]
ADC_CH1_value_i[8] <= intADC:ADC1.response_data[8]
ADC_CH1_value_i[9] <= intADC:ADC1.response_data[9]
ADC_CH1_value_i[10] <= intADC:ADC1.response_data[10]
ADC_CH1_value_i[11] <= intADC:ADC1.response_data[11]
ADC_CH1_value_i[12] <= <GND>
ADC_CH1_value_i[13] <= <GND>
ADC_CH1_value_i[14] <= <GND>
ADC_CH1_value_i[15] <= <GND>
ADC_CH1_value_i[16] <= <GND>
ADC_CH1_value_i[17] <= <GND>
ADC_CH1_value_i[18] <= <GND>
ADC_CH1_value_i[19] <= <GND>
ADC_CH1_value_i[20] <= <GND>
ADC_CH1_value_i[21] <= <GND>
ADC_CH1_value_i[22] <= <GND>
ADC_CH1_value_i[23] <= <GND>
ADC_CH1_value_i[24] <= <GND>
ADC_CH1_value_i[25] <= <GND>
ADC_CH1_value_i[26] <= <GND>
ADC_CH1_value_i[27] <= <GND>
ADC_CH1_value_i[28] <= <GND>
ADC_CH1_value_i[29] <= <GND>
ADC_CH1_value_i[30] <= <GND>
ADC_CH1_value_unsig[0] <= intADC:ADC1.response_data[0]
ADC_CH1_value_unsig[1] <= intADC:ADC1.response_data[1]
ADC_CH1_value_unsig[2] <= intADC:ADC1.response_data[2]
ADC_CH1_value_unsig[3] <= intADC:ADC1.response_data[3]
ADC_CH1_value_unsig[4] <= intADC:ADC1.response_data[4]
ADC_CH1_value_unsig[5] <= intADC:ADC1.response_data[5]
ADC_CH1_value_unsig[6] <= intADC:ADC1.response_data[6]
ADC_CH1_value_unsig[7] <= intADC:ADC1.response_data[7]
ADC_CH1_value_unsig[8] <= intADC:ADC1.response_data[8]
ADC_CH1_value_unsig[9] <= intADC:ADC1.response_data[9]
ADC_CH1_value_unsig[10] <= intADC:ADC1.response_data[10]
ADC_CH1_value_unsig[11] <= intADC:ADC1.response_data[11]
CONNECTED_TO_command_ready <= intADC:ADC1.command_ready
CONNECTED_TO_response_valid <= intADC:ADC1.response_valid


|DE10_LITE|DataUnit:dataFrontEnd|ADC_clock_divider:ADC_CLK_divider
areset => altpll:altpll_component.areset
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|DE10_LITE|DataUnit:dataFrontEnd|ADC_clock_divider:ADC_CLK_divider|altpll:altpll_component
inclk[0] => ADC_clock_divider_altpll:auto_generated.inclk[0]
inclk[1] => ADC_clock_divider_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ADC_clock_divider_altpll:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= ADC_clock_divider_altpll:auto_generated.locked
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|DE10_LITE|DataUnit:dataFrontEnd|ADC_clock_divider:ADC_CLK_divider|altpll:altpll_component|ADC_clock_divider_altpll:auto_generated
areset => pll_lock_sync.ACLR
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1
locked <= locked.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1
adc_pll_clock_clk => intADC_modular_adc_0:modular_adc_0.adc_pll_clock_clk
adc_pll_locked_export => intADC_modular_adc_0:modular_adc_0.adc_pll_locked_export
clock_clk => intADC_modular_adc_0:modular_adc_0.clock_clk
command_valid => intADC_modular_adc_0:modular_adc_0.command_valid
command_channel[0] => intADC_modular_adc_0:modular_adc_0.command_channel[0]
command_channel[1] => intADC_modular_adc_0:modular_adc_0.command_channel[1]
command_channel[2] => intADC_modular_adc_0:modular_adc_0.command_channel[2]
command_channel[3] => intADC_modular_adc_0:modular_adc_0.command_channel[3]
command_channel[4] => intADC_modular_adc_0:modular_adc_0.command_channel[4]
command_startofpacket => intADC_modular_adc_0:modular_adc_0.command_startofpacket
command_endofpacket => intADC_modular_adc_0:modular_adc_0.command_endofpacket
command_ready <= intADC_modular_adc_0:modular_adc_0.command_ready
reset_sink_reset_n => intADC_modular_adc_0:modular_adc_0.reset_sink_reset_n
response_valid <= intADC_modular_adc_0:modular_adc_0.response_valid
response_channel[0] <= intADC_modular_adc_0:modular_adc_0.response_channel[0]
response_channel[1] <= intADC_modular_adc_0:modular_adc_0.response_channel[1]
response_channel[2] <= intADC_modular_adc_0:modular_adc_0.response_channel[2]
response_channel[3] <= intADC_modular_adc_0:modular_adc_0.response_channel[3]
response_channel[4] <= intADC_modular_adc_0:modular_adc_0.response_channel[4]
response_data[0] <= intADC_modular_adc_0:modular_adc_0.response_data[0]
response_data[1] <= intADC_modular_adc_0:modular_adc_0.response_data[1]
response_data[2] <= intADC_modular_adc_0:modular_adc_0.response_data[2]
response_data[3] <= intADC_modular_adc_0:modular_adc_0.response_data[3]
response_data[4] <= intADC_modular_adc_0:modular_adc_0.response_data[4]
response_data[5] <= intADC_modular_adc_0:modular_adc_0.response_data[5]
response_data[6] <= intADC_modular_adc_0:modular_adc_0.response_data[6]
response_data[7] <= intADC_modular_adc_0:modular_adc_0.response_data[7]
response_data[8] <= intADC_modular_adc_0:modular_adc_0.response_data[8]
response_data[9] <= intADC_modular_adc_0:modular_adc_0.response_data[9]
response_data[10] <= intADC_modular_adc_0:modular_adc_0.response_data[10]
response_data[11] <= intADC_modular_adc_0:modular_adc_0.response_data[11]
response_startofpacket <= intADC_modular_adc_0:modular_adc_0.response_startofpacket
response_endofpacket <= intADC_modular_adc_0:modular_adc_0.response_endofpacket


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0
clock_clk => clock_clk.IN1
reset_sink_reset_n => reset_sink_reset_n.IN1
adc_pll_clock_clk => adc_pll_clock_clk.IN1
adc_pll_locked_export => adc_pll_locked_export.IN1
command_valid => command_valid.IN1
command_channel[0] => command_channel[0].IN1
command_channel[1] => command_channel[1].IN1
command_channel[2] => command_channel[2].IN1
command_channel[3] => command_channel[3].IN1
command_channel[4] => command_channel[4].IN1
command_startofpacket => command_startofpacket.IN1
command_endofpacket => command_endofpacket.IN1
command_ready <= altera_modular_adc_control:control_internal.cmd_ready
response_valid <= altera_modular_adc_control:control_internal.rsp_valid
response_channel[0] <= altera_modular_adc_control:control_internal.rsp_channel
response_channel[1] <= altera_modular_adc_control:control_internal.rsp_channel
response_channel[2] <= altera_modular_adc_control:control_internal.rsp_channel
response_channel[3] <= altera_modular_adc_control:control_internal.rsp_channel
response_channel[4] <= altera_modular_adc_control:control_internal.rsp_channel
response_data[0] <= altera_modular_adc_control:control_internal.rsp_data
response_data[1] <= altera_modular_adc_control:control_internal.rsp_data
response_data[2] <= altera_modular_adc_control:control_internal.rsp_data
response_data[3] <= altera_modular_adc_control:control_internal.rsp_data
response_data[4] <= altera_modular_adc_control:control_internal.rsp_data
response_data[5] <= altera_modular_adc_control:control_internal.rsp_data
response_data[6] <= altera_modular_adc_control:control_internal.rsp_data
response_data[7] <= altera_modular_adc_control:control_internal.rsp_data
response_data[8] <= altera_modular_adc_control:control_internal.rsp_data
response_data[9] <= altera_modular_adc_control:control_internal.rsp_data
response_data[10] <= altera_modular_adc_control:control_internal.rsp_data
response_data[11] <= altera_modular_adc_control:control_internal.rsp_data
response_startofpacket <= altera_modular_adc_control:control_internal.rsp_sop
response_endofpacket <= altera_modular_adc_control:control_internal.rsp_eop


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal
clk => clk.IN1
rst_n => rst_n.IN1
clk_in_pll_c0 => clk_in_pll_c0.IN1
clk_in_pll_locked => clk_in_pll_locked.IN1
cmd_valid => cmd_valid.IN1
cmd_channel[0] => cmd_channel[0].IN1
cmd_channel[1] => cmd_channel[1].IN1
cmd_channel[2] => cmd_channel[2].IN1
cmd_channel[3] => cmd_channel[3].IN1
cmd_channel[4] => cmd_channel[4].IN1
cmd_sop => cmd_sop.IN1
cmd_eop => cmd_eop.IN1
sync_ready => sync_ready.IN1
cmd_ready <= altera_modular_adc_control_fsm:u_control_fsm.cmd_ready
rsp_valid <= altera_modular_adc_control_fsm:u_control_fsm.rsp_valid
rsp_channel[0] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_channel
rsp_channel[1] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_channel
rsp_channel[2] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_channel
rsp_channel[3] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_channel
rsp_channel[4] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_channel
rsp_data[0] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[1] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[2] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[3] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[4] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[5] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[6] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[7] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[8] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[9] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[10] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_data[11] <= altera_modular_adc_control_fsm:u_control_fsm.rsp_data
rsp_sop <= altera_modular_adc_control_fsm:u_control_fsm.rsp_sop
rsp_eop <= altera_modular_adc_control_fsm:u_control_fsm.rsp_eop
sync_valid <= altera_modular_adc_control_fsm:u_control_fsm.sync_valid


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm
clk => clk.IN3
rst_n => rst_n.IN2
clk_in_pll_locked => Selector1.IN5
clk_in_pll_locked => Selector0.IN1
cmd_valid => always3.IN1
cmd_valid => ctrl_state_nxt.OUTPUTSELECT
cmd_valid => ctrl_state_nxt.OUTPUTSELECT
cmd_valid => ctrl_state_nxt.GETCMD_W.DATAB
cmd_valid => Selector7.IN3
cmd_valid => Selector7.IN4
cmd_valid => Selector6.IN2
cmd_valid => Selector6.IN3
cmd_valid => clear_avrg_cnt_done.IN1
cmd_channel[0] => Selector16.IN5
cmd_channel[0] => Equal1.IN4
cmd_channel[0] => Equal2.IN1
cmd_channel[0] => cmd_channel_dly[0].DATAIN
cmd_channel[1] => Selector15.IN5
cmd_channel[1] => Equal1.IN3
cmd_channel[1] => Equal2.IN4
cmd_channel[1] => cmd_channel_dly[1].DATAIN
cmd_channel[2] => Selector14.IN5
cmd_channel[2] => Equal1.IN2
cmd_channel[2] => Equal2.IN3
cmd_channel[2] => cmd_channel_dly[2].DATAIN
cmd_channel[3] => Selector13.IN5
cmd_channel[3] => Equal1.IN1
cmd_channel[3] => Equal2.IN2
cmd_channel[3] => cmd_channel_dly[3].DATAIN
cmd_channel[4] => Selector12.IN5
cmd_channel[4] => Equal1.IN0
cmd_channel[4] => Equal2.IN0
cmd_channel[4] => cmd_channel_dly[4].DATAIN
cmd_sop => cmd_sop_dly.DATAIN
cmd_eop => cmd_eop_dly.DATAIN
clk_dft => clk_dft.IN1
eoc => eoc.IN1
dout[0] => dout_flp.DATAB
dout[1] => dout_flp.DATAB
dout[2] => dout_flp.DATAB
dout[3] => dout_flp.DATAB
dout[4] => dout_flp.DATAB
dout[5] => dout_flp.DATAB
dout[6] => dout_flp.DATAB
dout[7] => dout_flp.DATAB
dout[8] => dout_flp.DATAB
dout[9] => dout_flp.DATAB
dout[10] => dout_flp.DATAB
dout[11] => dout_flp.DATAB
sync_ready => ctrl_state_nxt.OUTPUTSELECT
sync_ready => ctrl_state_nxt.OUTPUTSELECT
sync_ready => ctrl_state_nxt.OUTPUTSELECT
rsp_valid <= rsp_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_channel[0] <= rsp_channel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_channel[1] <= rsp_channel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_channel[2] <= rsp_channel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_channel[3] <= rsp_channel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_channel[4] <= rsp_channel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[0] <= rsp_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[1] <= rsp_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[2] <= rsp_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[3] <= rsp_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[4] <= rsp_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[5] <= rsp_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[6] <= rsp_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[7] <= rsp_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[8] <= rsp_data[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[9] <= rsp_data[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[10] <= rsp_data[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_data[11] <= rsp_data[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_sop <= rsp_sop~reg0.DB_MAX_OUTPUT_PORT_TYPE
rsp_eop <= rsp_eop~reg0.DB_MAX_OUTPUT_PORT_TYPE
cmd_ready <= cmd_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE
chsel[0] <= chsel[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
chsel[1] <= chsel[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
chsel[2] <= chsel[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
chsel[3] <= chsel[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
chsel[4] <= chsel[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
soc <= soc~reg0.DB_MAX_OUTPUT_PORT_TYPE
usr_pwd <= usr_pwd~reg0.DB_MAX_OUTPUT_PORT_TYPE
tsen <= tsen~reg0.DB_MAX_OUTPUT_PORT_TYPE
sync_valid <= sync_valid.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_std_synchronizer:u_clk_dft_synchronizer
clk => dreg[0].CLK
clk => din_s1.CLK
reset_n => dreg[0].ACLR
reset_n => din_s1.ACLR
din => din_s1.DATAIN
dout <= dout.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_std_synchronizer:u_eoc_synchronizer
clk => dreg[0].CLK
clk => din_s1.CLK
reset_n => dreg[0].ACLR
reset_n => din_s1.ACLR
din => din_s1.DATAIN
dout <= dout.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo
clock => clock.IN1
data[0] => data[0].IN1
data[1] => data[1].IN1
data[2] => data[2].IN1
data[3] => data[3].IN1
data[4] => data[4].IN1
data[5] => data[5].IN1
data[6] => data[6].IN1
data[7] => data[7].IN1
data[8] => data[8].IN1
data[9] => data[9].IN1
data[10] => data[10].IN1
data[11] => data[11].IN1
rdreq => rdreq.IN1
sclr => sclr.IN1
wrreq => wrreq.IN1
empty <= scfifo:scfifo_component.empty
full <= scfifo:scfifo_component.full
q[0] <= scfifo:scfifo_component.q
q[1] <= scfifo:scfifo_component.q
q[2] <= scfifo:scfifo_component.q
q[3] <= scfifo:scfifo_component.q
q[4] <= scfifo:scfifo_component.q
q[5] <= scfifo:scfifo_component.q
q[6] <= scfifo:scfifo_component.q
q[7] <= scfifo:scfifo_component.q
q[8] <= scfifo:scfifo_component.q
q[9] <= scfifo:scfifo_component.q
q[10] <= scfifo:scfifo_component.q
q[11] <= scfifo:scfifo_component.q


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component
data[0] => scfifo_ds61:auto_generated.data[0]
data[1] => scfifo_ds61:auto_generated.data[1]
data[2] => scfifo_ds61:auto_generated.data[2]
data[3] => scfifo_ds61:auto_generated.data[3]
data[4] => scfifo_ds61:auto_generated.data[4]
data[5] => scfifo_ds61:auto_generated.data[5]
data[6] => scfifo_ds61:auto_generated.data[6]
data[7] => scfifo_ds61:auto_generated.data[7]
data[8] => scfifo_ds61:auto_generated.data[8]
data[9] => scfifo_ds61:auto_generated.data[9]
data[10] => scfifo_ds61:auto_generated.data[10]
data[11] => scfifo_ds61:auto_generated.data[11]
q[0] <= scfifo_ds61:auto_generated.q[0]
q[1] <= scfifo_ds61:auto_generated.q[1]
q[2] <= scfifo_ds61:auto_generated.q[2]
q[3] <= scfifo_ds61:auto_generated.q[3]
q[4] <= scfifo_ds61:auto_generated.q[4]
q[5] <= scfifo_ds61:auto_generated.q[5]
q[6] <= scfifo_ds61:auto_generated.q[6]
q[7] <= scfifo_ds61:auto_generated.q[7]
q[8] <= scfifo_ds61:auto_generated.q[8]
q[9] <= scfifo_ds61:auto_generated.q[9]
q[10] <= scfifo_ds61:auto_generated.q[10]
q[11] <= scfifo_ds61:auto_generated.q[11]
wrreq => scfifo_ds61:auto_generated.wrreq
rdreq => scfifo_ds61:auto_generated.rdreq
clock => scfifo_ds61:auto_generated.clock
aclr => ~NO_FANOUT~
sclr => scfifo_ds61:auto_generated.sclr
eccstatus[0] <= <UNC>
eccstatus[1] <= <UNC>
empty <= scfifo_ds61:auto_generated.empty
full <= scfifo_ds61:auto_generated.full
almost_full <= <GND>
almost_empty <= <GND>
usedw[0] <= <GND>
usedw[1] <= <GND>
usedw[2] <= <GND>
usedw[3] <= <GND>
usedw[4] <= <GND>
usedw[5] <= <GND>


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated
clock => a_dpfifo_3o41:dpfifo.clock
data[0] => a_dpfifo_3o41:dpfifo.data[0]
data[1] => a_dpfifo_3o41:dpfifo.data[1]
data[2] => a_dpfifo_3o41:dpfifo.data[2]
data[3] => a_dpfifo_3o41:dpfifo.data[3]
data[4] => a_dpfifo_3o41:dpfifo.data[4]
data[5] => a_dpfifo_3o41:dpfifo.data[5]
data[6] => a_dpfifo_3o41:dpfifo.data[6]
data[7] => a_dpfifo_3o41:dpfifo.data[7]
data[8] => a_dpfifo_3o41:dpfifo.data[8]
data[9] => a_dpfifo_3o41:dpfifo.data[9]
data[10] => a_dpfifo_3o41:dpfifo.data[10]
data[11] => a_dpfifo_3o41:dpfifo.data[11]
empty <= a_dpfifo_3o41:dpfifo.empty
full <= a_dpfifo_3o41:dpfifo.full
q[0] <= a_dpfifo_3o41:dpfifo.q[0]
q[1] <= a_dpfifo_3o41:dpfifo.q[1]
q[2] <= a_dpfifo_3o41:dpfifo.q[2]
q[3] <= a_dpfifo_3o41:dpfifo.q[3]
q[4] <= a_dpfifo_3o41:dpfifo.q[4]
q[5] <= a_dpfifo_3o41:dpfifo.q[5]
q[6] <= a_dpfifo_3o41:dpfifo.q[6]
q[7] <= a_dpfifo_3o41:dpfifo.q[7]
q[8] <= a_dpfifo_3o41:dpfifo.q[8]
q[9] <= a_dpfifo_3o41:dpfifo.q[9]
q[10] <= a_dpfifo_3o41:dpfifo.q[10]
q[11] <= a_dpfifo_3o41:dpfifo.q[11]
rdreq => a_dpfifo_3o41:dpfifo.rreq
sclr => a_dpfifo_3o41:dpfifo.sclr
wrreq => a_dpfifo_3o41:dpfifo.wreq


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo
clock => a_fefifo_c6e:fifo_state.clock
clock => altsyncram_rqn1:FIFOram.clock0
clock => altsyncram_rqn1:FIFOram.clock1
clock => cntr_n2b:rd_ptr_count.clock
clock => cntr_n2b:wr_ptr.clock
data[0] => altsyncram_rqn1:FIFOram.data_a[0]
data[1] => altsyncram_rqn1:FIFOram.data_a[1]
data[2] => altsyncram_rqn1:FIFOram.data_a[2]
data[3] => altsyncram_rqn1:FIFOram.data_a[3]
data[4] => altsyncram_rqn1:FIFOram.data_a[4]
data[5] => altsyncram_rqn1:FIFOram.data_a[5]
data[6] => altsyncram_rqn1:FIFOram.data_a[6]
data[7] => altsyncram_rqn1:FIFOram.data_a[7]
data[8] => altsyncram_rqn1:FIFOram.data_a[8]
data[9] => altsyncram_rqn1:FIFOram.data_a[9]
data[10] => altsyncram_rqn1:FIFOram.data_a[10]
data[11] => altsyncram_rqn1:FIFOram.data_a[11]
empty <= a_fefifo_c6e:fifo_state.empty
full <= a_fefifo_c6e:fifo_state.full
q[0] <= altsyncram_rqn1:FIFOram.q_b[0]
q[1] <= altsyncram_rqn1:FIFOram.q_b[1]
q[2] <= altsyncram_rqn1:FIFOram.q_b[2]
q[3] <= altsyncram_rqn1:FIFOram.q_b[3]
q[4] <= altsyncram_rqn1:FIFOram.q_b[4]
q[5] <= altsyncram_rqn1:FIFOram.q_b[5]
q[6] <= altsyncram_rqn1:FIFOram.q_b[6]
q[7] <= altsyncram_rqn1:FIFOram.q_b[7]
q[8] <= altsyncram_rqn1:FIFOram.q_b[8]
q[9] <= altsyncram_rqn1:FIFOram.q_b[9]
q[10] <= altsyncram_rqn1:FIFOram.q_b[10]
q[11] <= altsyncram_rqn1:FIFOram.q_b[11]
rreq => a_fefifo_c6e:fifo_state.rreq
rreq => valid_rreq.IN0
sclr => a_fefifo_c6e:fifo_state.sclr
sclr => _.IN0
sclr => _.IN1
sclr => cntr_n2b:rd_ptr_count.sclr
sclr => cntr_n2b:wr_ptr.sclr
wreq => a_fefifo_c6e:fifo_state.wreq
wreq => valid_wreq.IN0


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo|a_fefifo_c6e:fifo_state
aclr => b_full.IN0
aclr => b_non_empty.IN0
aclr => cntr_337:count_usedw.aclr
clock => cntr_337:count_usedw.clock
clock => b_full.CLK
clock => b_non_empty.CLK
empty <= empty.DB_MAX_OUTPUT_PORT_TYPE
full <= b_full.DB_MAX_OUTPUT_PORT_TYPE
rreq => _.IN1
rreq => _.IN0
rreq => _.IN1
rreq => valid_rreq.IN0
sclr => _.IN0
sclr => _.IN0
sclr => _.IN1
sclr => _.IN0
sclr => _.IN0
sclr => cntr_337:count_usedw.sclr
wreq => _.IN1
wreq => _.IN1
wreq => _.IN0
wreq => valid_wreq.IN0


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo|a_fefifo_c6e:fifo_state|cntr_337:count_usedw
aclr => counter_reg_bit[5].IN0
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0
updown => counter_comb_bita0.DATAB
updown => counter_comb_bita1.DATAB
updown => counter_comb_bita2.DATAB
updown => counter_comb_bita3.DATAB
updown => counter_comb_bita4.DATAB
updown => counter_comb_bita5.DATAB


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo|altsyncram_rqn1:FIFOram
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[0] => ram_block1a8.PORTAADDR
address_a[0] => ram_block1a9.PORTAADDR
address_a[0] => ram_block1a10.PORTAADDR
address_a[0] => ram_block1a11.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[1] => ram_block1a8.PORTAADDR1
address_a[1] => ram_block1a9.PORTAADDR1
address_a[1] => ram_block1a10.PORTAADDR1
address_a[1] => ram_block1a11.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[2] => ram_block1a8.PORTAADDR2
address_a[2] => ram_block1a9.PORTAADDR2
address_a[2] => ram_block1a10.PORTAADDR2
address_a[2] => ram_block1a11.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[3] => ram_block1a8.PORTAADDR3
address_a[3] => ram_block1a9.PORTAADDR3
address_a[3] => ram_block1a10.PORTAADDR3
address_a[3] => ram_block1a11.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
address_a[4] => ram_block1a8.PORTAADDR4
address_a[4] => ram_block1a9.PORTAADDR4
address_a[4] => ram_block1a10.PORTAADDR4
address_a[4] => ram_block1a11.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[5] => ram_block1a1.PORTAADDR5
address_a[5] => ram_block1a2.PORTAADDR5
address_a[5] => ram_block1a3.PORTAADDR5
address_a[5] => ram_block1a4.PORTAADDR5
address_a[5] => ram_block1a5.PORTAADDR5
address_a[5] => ram_block1a6.PORTAADDR5
address_a[5] => ram_block1a7.PORTAADDR5
address_a[5] => ram_block1a8.PORTAADDR5
address_a[5] => ram_block1a9.PORTAADDR5
address_a[5] => ram_block1a10.PORTAADDR5
address_a[5] => ram_block1a11.PORTAADDR5
address_b[0] => ram_block1a0.PORTBADDR
address_b[0] => ram_block1a1.PORTBADDR
address_b[0] => ram_block1a2.PORTBADDR
address_b[0] => ram_block1a3.PORTBADDR
address_b[0] => ram_block1a4.PORTBADDR
address_b[0] => ram_block1a5.PORTBADDR
address_b[0] => ram_block1a6.PORTBADDR
address_b[0] => ram_block1a7.PORTBADDR
address_b[0] => ram_block1a8.PORTBADDR
address_b[0] => ram_block1a9.PORTBADDR
address_b[0] => ram_block1a10.PORTBADDR
address_b[0] => ram_block1a11.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[1] => ram_block1a1.PORTBADDR1
address_b[1] => ram_block1a2.PORTBADDR1
address_b[1] => ram_block1a3.PORTBADDR1
address_b[1] => ram_block1a4.PORTBADDR1
address_b[1] => ram_block1a5.PORTBADDR1
address_b[1] => ram_block1a6.PORTBADDR1
address_b[1] => ram_block1a7.PORTBADDR1
address_b[1] => ram_block1a8.PORTBADDR1
address_b[1] => ram_block1a9.PORTBADDR1
address_b[1] => ram_block1a10.PORTBADDR1
address_b[1] => ram_block1a11.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[2] => ram_block1a1.PORTBADDR2
address_b[2] => ram_block1a2.PORTBADDR2
address_b[2] => ram_block1a3.PORTBADDR2
address_b[2] => ram_block1a4.PORTBADDR2
address_b[2] => ram_block1a5.PORTBADDR2
address_b[2] => ram_block1a6.PORTBADDR2
address_b[2] => ram_block1a7.PORTBADDR2
address_b[2] => ram_block1a8.PORTBADDR2
address_b[2] => ram_block1a9.PORTBADDR2
address_b[2] => ram_block1a10.PORTBADDR2
address_b[2] => ram_block1a11.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[3] => ram_block1a1.PORTBADDR3
address_b[3] => ram_block1a2.PORTBADDR3
address_b[3] => ram_block1a3.PORTBADDR3
address_b[3] => ram_block1a4.PORTBADDR3
address_b[3] => ram_block1a5.PORTBADDR3
address_b[3] => ram_block1a6.PORTBADDR3
address_b[3] => ram_block1a7.PORTBADDR3
address_b[3] => ram_block1a8.PORTBADDR3
address_b[3] => ram_block1a9.PORTBADDR3
address_b[3] => ram_block1a10.PORTBADDR3
address_b[3] => ram_block1a11.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[4] => ram_block1a1.PORTBADDR4
address_b[4] => ram_block1a2.PORTBADDR4
address_b[4] => ram_block1a3.PORTBADDR4
address_b[4] => ram_block1a4.PORTBADDR4
address_b[4] => ram_block1a5.PORTBADDR4
address_b[4] => ram_block1a6.PORTBADDR4
address_b[4] => ram_block1a7.PORTBADDR4
address_b[4] => ram_block1a8.PORTBADDR4
address_b[4] => ram_block1a9.PORTBADDR4
address_b[4] => ram_block1a10.PORTBADDR4
address_b[4] => ram_block1a11.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[5] => ram_block1a1.PORTBADDR5
address_b[5] => ram_block1a2.PORTBADDR5
address_b[5] => ram_block1a3.PORTBADDR5
address_b[5] => ram_block1a4.PORTBADDR5
address_b[5] => ram_block1a5.PORTBADDR5
address_b[5] => ram_block1a6.PORTBADDR5
address_b[5] => ram_block1a7.PORTBADDR5
address_b[5] => ram_block1a8.PORTBADDR5
address_b[5] => ram_block1a9.PORTBADDR5
address_b[5] => ram_block1a10.PORTBADDR5
address_b[5] => ram_block1a11.PORTBADDR5
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
clock0 => ram_block1a8.CLK0
clock0 => ram_block1a9.CLK0
clock0 => ram_block1a10.CLK0
clock0 => ram_block1a11.CLK0
clock1 => ram_block1a0.CLK1
clock1 => ram_block1a1.CLK1
clock1 => ram_block1a2.CLK1
clock1 => ram_block1a3.CLK1
clock1 => ram_block1a4.CLK1
clock1 => ram_block1a5.CLK1
clock1 => ram_block1a6.CLK1
clock1 => ram_block1a7.CLK1
clock1 => ram_block1a8.CLK1
clock1 => ram_block1a9.CLK1
clock1 => ram_block1a10.CLK1
clock1 => ram_block1a11.CLK1
clocken1 => ram_block1a0.ENA1
clocken1 => ram_block1a1.ENA1
clocken1 => ram_block1a2.ENA1
clocken1 => ram_block1a3.ENA1
clocken1 => ram_block1a4.ENA1
clocken1 => ram_block1a5.ENA1
clocken1 => ram_block1a6.ENA1
clocken1 => ram_block1a7.ENA1
clocken1 => ram_block1a8.ENA1
clocken1 => ram_block1a9.ENA1
clocken1 => ram_block1a10.ENA1
clocken1 => ram_block1a11.ENA1
data_a[0] => ram_block1a0.PORTADATAIN
data_a[1] => ram_block1a1.PORTADATAIN
data_a[2] => ram_block1a2.PORTADATAIN
data_a[3] => ram_block1a3.PORTADATAIN
data_a[4] => ram_block1a4.PORTADATAIN
data_a[5] => ram_block1a5.PORTADATAIN
data_a[6] => ram_block1a6.PORTADATAIN
data_a[7] => ram_block1a7.PORTADATAIN
data_a[8] => ram_block1a8.PORTADATAIN
data_a[9] => ram_block1a9.PORTADATAIN
data_a[10] => ram_block1a10.PORTADATAIN
data_a[11] => ram_block1a11.PORTADATAIN
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a1.PORTBDATAOUT
q_b[2] <= ram_block1a2.PORTBDATAOUT
q_b[3] <= ram_block1a3.PORTBDATAOUT
q_b[4] <= ram_block1a4.PORTBDATAOUT
q_b[5] <= ram_block1a5.PORTBDATAOUT
q_b[6] <= ram_block1a6.PORTBDATAOUT
q_b[7] <= ram_block1a7.PORTBDATAOUT
q_b[8] <= ram_block1a8.PORTBDATAOUT
q_b[9] <= ram_block1a9.PORTBDATAOUT
q_b[10] <= ram_block1a10.PORTBDATAOUT
q_b[11] <= ram_block1a11.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_a => ram_block1a0.ENA0
wren_a => ram_block1a1.PORTAWE
wren_a => ram_block1a1.ENA0
wren_a => ram_block1a2.PORTAWE
wren_a => ram_block1a2.ENA0
wren_a => ram_block1a3.PORTAWE
wren_a => ram_block1a3.ENA0
wren_a => ram_block1a4.PORTAWE
wren_a => ram_block1a4.ENA0
wren_a => ram_block1a5.PORTAWE
wren_a => ram_block1a5.ENA0
wren_a => ram_block1a6.PORTAWE
wren_a => ram_block1a6.ENA0
wren_a => ram_block1a7.PORTAWE
wren_a => ram_block1a7.ENA0
wren_a => ram_block1a8.PORTAWE
wren_a => ram_block1a8.ENA0
wren_a => ram_block1a9.PORTAWE
wren_a => ram_block1a9.ENA0
wren_a => ram_block1a10.PORTAWE
wren_a => ram_block1a10.ENA0
wren_a => ram_block1a11.PORTAWE
wren_a => ram_block1a11.ENA0


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo|cntr_n2b:rd_ptr_count
aclr => counter_reg_bit[5].IN0
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|altera_modular_adc_control_fsm:u_control_fsm|altera_modular_adc_control_avrg_fifo:ts_avrg_fifo|scfifo:scfifo_component|scfifo_ds61:auto_generated|a_dpfifo_3o41:dpfifo|cntr_n2b:wr_ptr
aclr => counter_reg_bit[5].IN0
clock => counter_reg_bit[5].CLK
clock => counter_reg_bit[4].CLK
clock => counter_reg_bit[3].CLK
clock => counter_reg_bit[2].CLK
clock => counter_reg_bit[1].CLK
clock => counter_reg_bit[0].CLK
cnt_en => _.IN1
q[0] <= counter_reg_bit[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= counter_reg_bit[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= counter_reg_bit[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= counter_reg_bit[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= counter_reg_bit[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= counter_reg_bit[5].DB_MAX_OUTPUT_PORT_TYPE
sclr => _.IN0
sclr => _.IN0
sclr => _.IN0


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|fiftyfivenm_adcblock_top_wrapper:adc_inst
chsel[0] => chsel[0].IN1
chsel[1] => chsel[1].IN1
chsel[2] => chsel[2].IN1
chsel[3] => chsel[3].IN1
chsel[4] => chsel[4].IN1
soc => soc.IN1
eoc <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.eoc
dout[0] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[1] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[2] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[3] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[4] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[5] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[6] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[7] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[8] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[9] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[10] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
dout[11] <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.dout
usr_pwd => usr_pwd.IN1
tsen => tsen.IN1
clkout_adccore <= fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance.clkout_adccore
clkin_from_pll_c0 => clkin_from_pll_c0.IN1


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|fiftyfivenm_adcblock_top_wrapper:adc_inst|chsel_code_converter_sw_to_hw:decoder
chsel_from_sw[0] => Decoder0.IN4
chsel_from_sw[1] => Decoder0.IN3
chsel_from_sw[2] => Decoder0.IN2
chsel_from_sw[3] => Decoder0.IN1
chsel_from_sw[4] => Decoder0.IN0
chsel_to_hw[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
chsel_to_hw[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
chsel_to_hw[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
chsel_to_hw[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
chsel_to_hw[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|DataUnit:dataFrontEnd|intADC:ADC1|intADC_modular_adc_0:modular_adc_0|altera_modular_adc_control:control_internal|fiftyfivenm_adcblock_top_wrapper:adc_inst|fiftyfivenm_adcblock_primitive_wrapper:adcblock_instance
chsel[0] => primitive_instance.I_CHSEL
chsel[1] => primitive_instance.I_CHSEL1
chsel[2] => primitive_instance.I_CHSEL2
chsel[3] => primitive_instance.I_CHSEL3
chsel[4] => primitive_instance.I_CHSEL4
soc => primitive_instance.I_SOC
eoc <= primitive_instance.O_EOC
dout[0] <= primitive_instance.O_DOUT
dout[1] <= primitive_instance.O_DOUT1
dout[2] <= primitive_instance.O_DOUT2
dout[3] <= primitive_instance.O_DOUT3
dout[4] <= primitive_instance.O_DOUT4
dout[5] <= primitive_instance.O_DOUT5
dout[6] <= primitive_instance.O_DOUT6
dout[7] <= primitive_instance.O_DOUT7
dout[8] <= primitive_instance.O_DOUT8
dout[9] <= primitive_instance.O_DOUT9
dout[10] <= primitive_instance.O_DOUT10
dout[11] <= primitive_instance.O_DOUT11
usr_pwd => primitive_instance.I_USR_PWD
tsen => primitive_instance.I_TSEN
clkout_adccore <= primitive_instance.O_CLK_DFT
clkin_from_pll_c0 => primitive_instance.I_CLKIN_FROM_PLL_C0


|DE10_LITE|grafic_gen:grafic_generator
CLK => DivByTwo:DivByTwo_inst.inclk0
CLK => RED_out[0].CLK
CLK => RED_out[1].CLK
CLK => RED_out[2].CLK
CLK => RED_out[3].CLK
RESET_n => VGA_Interface:VGA_Anschluss.RESET_n
RESET_n => RED_out[0].ACLR
RESET_n => RED_out[1].ACLR
RESET_n => RED_out[2].ACLR
RESET_n => RED_out[3].ACLR
VGA_HS_out <= VGA_Interface:VGA_Anschluss.VGA_HS_out
VGA_VS_out <= VGA_Interface:VGA_Anschluss.VGA_VS_out
VGA_R_out[0] <= VGA_Interface:VGA_Anschluss.VGA_R_out[0]
VGA_R_out[1] <= VGA_Interface:VGA_Anschluss.VGA_R_out[1]
VGA_R_out[2] <= VGA_Interface:VGA_Anschluss.VGA_R_out[2]
VGA_R_out[3] <= VGA_Interface:VGA_Anschluss.VGA_R_out[3]
VGA_G_out[0] <= VGA_Interface:VGA_Anschluss.VGA_G_out[0]
VGA_G_out[1] <= VGA_Interface:VGA_Anschluss.VGA_G_out[1]
VGA_G_out[2] <= VGA_Interface:VGA_Anschluss.VGA_G_out[2]
VGA_G_out[3] <= VGA_Interface:VGA_Anschluss.VGA_G_out[3]
VGA_B_out[0] <= VGA_Interface:VGA_Anschluss.VGA_B_out[0]
VGA_B_out[1] <= VGA_Interface:VGA_Anschluss.VGA_B_out[1]
VGA_B_out[2] <= VGA_Interface:VGA_Anschluss.VGA_B_out[2]
VGA_B_out[3] <= VGA_Interface:VGA_Anschluss.VGA_B_out[3]


|DE10_LITE|grafic_gen:grafic_generator|DivByTwo:DivByTwo_inst
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]


|DE10_LITE|grafic_gen:grafic_generator|DivByTwo:DivByTwo_inst|altpll:altpll_component
inclk[0] => DivByTwo_altpll:auto_generated.inclk[0]
inclk[1] => DivByTwo_altpll:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|DE10_LITE|grafic_gen:grafic_generator|DivByTwo:DivByTwo_inst|altpll:altpll_component|DivByTwo_altpll:auto_generated
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|DE10_LITE|grafic_gen:grafic_generator|VGA_Interface:VGA_Anschluss
RESET_n => line_counter[0].ACLR
RESET_n => line_counter[1].ACLR
RESET_n => line_counter[2].ACLR
RESET_n => line_counter[3].ACLR
RESET_n => line_counter[4].ACLR
RESET_n => line_counter[5].ACLR
RESET_n => line_counter[6].ACLR
RESET_n => line_counter[7].ACLR
RESET_n => line_counter[8].ACLR
RESET_n => line_counter[9].ACLR
RESET_n => line_counter[10].ACLR
RESET_n => line_counter[11].ACLR
RESET_n => line_counter[12].ACLR
RESET_n => line_counter[13].ACLR
RESET_n => line_counter[14].ACLR
RESET_n => line_counter[15].ACLR
RESET_n => line_counter[16].ACLR
RESET_n => line_counter[17].ACLR
RESET_n => line_counter[18].ACLR
RESET_n => line_counter[19].ACLR
RESET_n => line_counter[20].ACLR
RESET_n => line_counter[21].ACLR
RESET_n => line_counter[22].ACLR
RESET_n => line_counter[23].ACLR
RESET_n => line_counter[24].ACLR
RESET_n => line_counter[25].ACLR
RESET_n => line_counter[26].ACLR
RESET_n => line_counter[27].ACLR
RESET_n => line_counter[28].ACLR
RESET_n => line_counter[29].ACLR
RESET_n => line_counter[30].ACLR
RESET_n => VGA_HS_out~reg0.PRESET
RESET_n => VGA_B_out[0]~reg0.ACLR
RESET_n => VGA_B_out[1]~reg0.ACLR
RESET_n => VGA_B_out[2]~reg0.ACLR
RESET_n => VGA_B_out[3]~reg0.ACLR
RESET_n => VGA_G_out[0]~reg0.ACLR
RESET_n => VGA_G_out[1]~reg0.ACLR
RESET_n => VGA_G_out[2]~reg0.ACLR
RESET_n => VGA_G_out[3]~reg0.ACLR
RESET_n => VGA_R_out[0]~reg0.ACLR
RESET_n => VGA_R_out[1]~reg0.ACLR
RESET_n => VGA_R_out[2]~reg0.ACLR
RESET_n => VGA_R_out[3]~reg0.ACLR
RESET_n => current_X_count[0].ACLR
RESET_n => current_X_count[1].ACLR
RESET_n => current_X_count[2].ACLR
RESET_n => current_X_count[3].ACLR
RESET_n => current_X_count[4].ACLR
RESET_n => current_X_count[5].ACLR
RESET_n => current_X_count[6].ACLR
RESET_n => current_X_count[7].ACLR
RESET_n => current_X_count[8].ACLR
RESET_n => current_X_count[9].ACLR
RESET_n => current_X_count[10].ACLR
RESET_n => current_X_count[11].ACLR
RESET_n => current_X_count[12].ACLR
RESET_n => current_X_count[13].ACLR
RESET_n => current_X_count[14].ACLR
RESET_n => current_X_count[15].ACLR
RESET_n => current_X_count[16].ACLR
RESET_n => current_X_count[17].ACLR
RESET_n => current_X_count[18].ACLR
RESET_n => current_X_count[19].ACLR
RESET_n => current_X_count[20].ACLR
RESET_n => current_X_count[21].ACLR
RESET_n => current_X_count[22].ACLR
RESET_n => current_X_count[23].ACLR
RESET_n => current_X_count[24].ACLR
RESET_n => current_X_count[25].ACLR
RESET_n => current_X_count[26].ACLR
RESET_n => current_X_count[27].ACLR
RESET_n => current_X_count[28].ACLR
RESET_n => current_X_count[29].ACLR
RESET_n => current_X_count[30].ACLR
RESET_n => pt_counter[0].ACLR
RESET_n => pt_counter[1].ACLR
RESET_n => pt_counter[2].ACLR
RESET_n => pt_counter[3].ACLR
RESET_n => pt_counter[4].ACLR
RESET_n => pt_counter[5].ACLR
RESET_n => pt_counter[6].ACLR
RESET_n => pt_counter[7].ACLR
RESET_n => pt_counter[8].ACLR
RESET_n => pt_counter[9].ACLR
RESET_n => pt_counter[10].ACLR
RESET_n => pt_counter[11].ACLR
RESET_n => pt_counter[12].ACLR
RESET_n => pt_counter[13].ACLR
RESET_n => pt_counter[14].ACLR
RESET_n => pt_counter[15].ACLR
RESET_n => pt_counter[16].ACLR
RESET_n => pt_counter[17].ACLR
RESET_n => pt_counter[18].ACLR
RESET_n => pt_counter[19].ACLR
RESET_n => pt_counter[20].ACLR
RESET_n => pt_counter[21].ACLR
RESET_n => pt_counter[22].ACLR
RESET_n => pt_counter[23].ACLR
RESET_n => pt_counter[24].ACLR
RESET_n => pt_counter[25].ACLR
RESET_n => pt_counter[26].ACLR
RESET_n => pt_counter[27].ACLR
RESET_n => pt_counter[28].ACLR
RESET_n => pt_counter[29].ACLR
RESET_n => pt_counter[30].ACLR
RESET_n => VGA_RGB_enable.ACLR
RESET_n => VGA_VS_out~reg0.PRESET
RESET_n => current_Y_count[0].ACLR
RESET_n => current_Y_count[1].ACLR
RESET_n => current_Y_count[2].ACLR
RESET_n => current_Y_count[3].ACLR
RESET_n => current_Y_count[4].ACLR
RESET_n => current_Y_count[5].ACLR
RESET_n => current_Y_count[6].ACLR
RESET_n => current_Y_count[7].ACLR
RESET_n => current_Y_count[8].ACLR
RESET_n => current_Y_count[9].ACLR
RESET_n => current_Y_count[10].ACLR
RESET_n => current_Y_count[11].ACLR
RESET_n => current_Y_count[12].ACLR
RESET_n => current_Y_count[13].ACLR
RESET_n => current_Y_count[14].ACLR
RESET_n => current_Y_count[15].ACLR
RESET_n => current_Y_count[16].ACLR
RESET_n => current_Y_count[17].ACLR
RESET_n => current_Y_count[18].ACLR
RESET_n => current_Y_count[19].ACLR
RESET_n => current_Y_count[20].ACLR
RESET_n => current_Y_count[21].ACLR
RESET_n => current_Y_count[22].ACLR
RESET_n => current_Y_count[23].ACLR
RESET_n => current_Y_count[24].ACLR
RESET_n => current_Y_count[25].ACLR
RESET_n => current_Y_count[26].ACLR
RESET_n => current_Y_count[27].ACLR
RESET_n => current_Y_count[28].ACLR
RESET_n => current_Y_count[29].ACLR
RESET_n => current_Y_count[30].ACLR
RESET_n => horizontal_state~7.DATAIN
CLK => VGA_RGB_enable.CLK
CLK => VGA_VS_out~reg0.CLK
CLK => current_Y_count[0].CLK
CLK => current_Y_count[1].CLK
CLK => current_Y_count[2].CLK
CLK => current_Y_count[3].CLK
CLK => current_Y_count[4].CLK
CLK => current_Y_count[5].CLK
CLK => current_Y_count[6].CLK
CLK => current_Y_count[7].CLK
CLK => current_Y_count[8].CLK
CLK => current_Y_count[9].CLK
CLK => current_Y_count[10].CLK
CLK => current_Y_count[11].CLK
CLK => current_Y_count[12].CLK
CLK => current_Y_count[13].CLK
CLK => current_Y_count[14].CLK
CLK => current_Y_count[15].CLK
CLK => current_Y_count[16].CLK
CLK => current_Y_count[17].CLK
CLK => current_Y_count[18].CLK
CLK => current_Y_count[19].CLK
CLK => current_Y_count[20].CLK
CLK => current_Y_count[21].CLK
CLK => current_Y_count[22].CLK
CLK => current_Y_count[23].CLK
CLK => current_Y_count[24].CLK
CLK => current_Y_count[25].CLK
CLK => current_Y_count[26].CLK
CLK => current_Y_count[27].CLK
CLK => current_Y_count[28].CLK
CLK => current_Y_count[29].CLK
CLK => current_Y_count[30].CLK
CLK => line_counter[0].CLK
CLK => line_counter[1].CLK
CLK => line_counter[2].CLK
CLK => line_counter[3].CLK
CLK => line_counter[4].CLK
CLK => line_counter[5].CLK
CLK => line_counter[6].CLK
CLK => line_counter[7].CLK
CLK => line_counter[8].CLK
CLK => line_counter[9].CLK
CLK => line_counter[10].CLK
CLK => line_counter[11].CLK
CLK => line_counter[12].CLK
CLK => line_counter[13].CLK
CLK => line_counter[14].CLK
CLK => line_counter[15].CLK
CLK => line_counter[16].CLK
CLK => line_counter[17].CLK
CLK => line_counter[18].CLK
CLK => line_counter[19].CLK
CLK => line_counter[20].CLK
CLK => line_counter[21].CLK
CLK => line_counter[22].CLK
CLK => line_counter[23].CLK
CLK => line_counter[24].CLK
CLK => line_counter[25].CLK
CLK => line_counter[26].CLK
CLK => line_counter[27].CLK
CLK => line_counter[28].CLK
CLK => line_counter[29].CLK
CLK => line_counter[30].CLK
CLK => VGA_HS_out~reg0.CLK
CLK => VGA_B_out[0]~reg0.CLK
CLK => VGA_B_out[1]~reg0.CLK
CLK => VGA_B_out[2]~reg0.CLK
CLK => VGA_B_out[3]~reg0.CLK
CLK => VGA_G_out[0]~reg0.CLK
CLK => VGA_G_out[1]~reg0.CLK
CLK => VGA_G_out[2]~reg0.CLK
CLK => VGA_G_out[3]~reg0.CLK
CLK => VGA_R_out[0]~reg0.CLK
CLK => VGA_R_out[1]~reg0.CLK
CLK => VGA_R_out[2]~reg0.CLK
CLK => VGA_R_out[3]~reg0.CLK
CLK => current_X_count[0].CLK
CLK => current_X_count[1].CLK
CLK => current_X_count[2].CLK
CLK => current_X_count[3].CLK
CLK => current_X_count[4].CLK
CLK => current_X_count[5].CLK
CLK => current_X_count[6].CLK
CLK => current_X_count[7].CLK
CLK => current_X_count[8].CLK
CLK => current_X_count[9].CLK
CLK => current_X_count[10].CLK
CLK => current_X_count[11].CLK
CLK => current_X_count[12].CLK
CLK => current_X_count[13].CLK
CLK => current_X_count[14].CLK
CLK => current_X_count[15].CLK
CLK => current_X_count[16].CLK
CLK => current_X_count[17].CLK
CLK => current_X_count[18].CLK
CLK => current_X_count[19].CLK
CLK => current_X_count[20].CLK
CLK => current_X_count[21].CLK
CLK => current_X_count[22].CLK
CLK => current_X_count[23].CLK
CLK => current_X_count[24].CLK
CLK => current_X_count[25].CLK
CLK => current_X_count[26].CLK
CLK => current_X_count[27].CLK
CLK => current_X_count[28].CLK
CLK => current_X_count[29].CLK
CLK => current_X_count[30].CLK
CLK => pt_counter[0].CLK
CLK => pt_counter[1].CLK
CLK => pt_counter[2].CLK
CLK => pt_counter[3].CLK
CLK => pt_counter[4].CLK
CLK => pt_counter[5].CLK
CLK => pt_counter[6].CLK
CLK => pt_counter[7].CLK
CLK => pt_counter[8].CLK
CLK => pt_counter[9].CLK
CLK => pt_counter[10].CLK
CLK => pt_counter[11].CLK
CLK => pt_counter[12].CLK
CLK => pt_counter[13].CLK
CLK => pt_counter[14].CLK
CLK => pt_counter[15].CLK
CLK => pt_counter[16].CLK
CLK => pt_counter[17].CLK
CLK => pt_counter[18].CLK
CLK => pt_counter[19].CLK
CLK => pt_counter[20].CLK
CLK => pt_counter[21].CLK
CLK => pt_counter[22].CLK
CLK => pt_counter[23].CLK
CLK => pt_counter[24].CLK
CLK => pt_counter[25].CLK
CLK => pt_counter[26].CLK
CLK => pt_counter[27].CLK
CLK => pt_counter[28].CLK
CLK => pt_counter[29].CLK
CLK => pt_counter[30].CLK
CLK => horizontal_state~5.DATAIN
RED_in[0] => VGA_R_out.DATAB
RED_in[1] => VGA_R_out.DATAB
RED_in[2] => VGA_R_out.DATAB
RED_in[3] => VGA_R_out.DATAB
GREEN_in[0] => VGA_G_out.DATAB
GREEN_in[1] => VGA_G_out.DATAB
GREEN_in[2] => VGA_G_out.DATAB
GREEN_in[3] => VGA_G_out.DATAB
BLUE_in[0] => VGA_B_out.DATAB
BLUE_in[1] => VGA_B_out.DATAB
BLUE_in[2] => VGA_B_out.DATAB
BLUE_in[3] => VGA_B_out.DATAB
CURRENT_X_out[0] <= current_X_count[0].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[1] <= current_X_count[1].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[2] <= current_X_count[2].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[3] <= current_X_count[3].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[4] <= current_X_count[4].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[5] <= current_X_count[5].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[6] <= current_X_count[6].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[7] <= current_X_count[7].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[8] <= current_X_count[8].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[9] <= current_X_count[9].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[10] <= current_X_count[10].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[11] <= current_X_count[11].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[12] <= current_X_count[12].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[13] <= current_X_count[13].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[14] <= current_X_count[14].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[15] <= current_X_count[15].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[16] <= current_X_count[16].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[17] <= current_X_count[17].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[18] <= current_X_count[18].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[19] <= current_X_count[19].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[20] <= current_X_count[20].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[21] <= current_X_count[21].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[22] <= current_X_count[22].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[23] <= current_X_count[23].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[24] <= current_X_count[24].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[25] <= current_X_count[25].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[26] <= current_X_count[26].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[27] <= current_X_count[27].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[28] <= current_X_count[28].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[29] <= current_X_count[29].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_X_out[30] <= current_X_count[30].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[0] <= current_Y_count[0].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[1] <= current_Y_count[1].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[2] <= current_Y_count[2].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[3] <= current_Y_count[3].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[4] <= current_Y_count[4].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[5] <= current_Y_count[5].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[6] <= current_Y_count[6].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[7] <= current_Y_count[7].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[8] <= current_Y_count[8].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[9] <= current_Y_count[9].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[10] <= current_Y_count[10].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[11] <= current_Y_count[11].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[12] <= current_Y_count[12].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[13] <= current_Y_count[13].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[14] <= current_Y_count[14].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[15] <= current_Y_count[15].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[16] <= current_Y_count[16].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[17] <= current_Y_count[17].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[18] <= current_Y_count[18].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[19] <= current_Y_count[19].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[20] <= current_Y_count[20].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[21] <= current_Y_count[21].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[22] <= current_Y_count[22].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[23] <= current_Y_count[23].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[24] <= current_Y_count[24].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[25] <= current_Y_count[25].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[26] <= current_Y_count[26].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[27] <= current_Y_count[27].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[28] <= current_Y_count[28].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[29] <= current_Y_count[29].DB_MAX_OUTPUT_PORT_TYPE
CURRENT_Y_out[30] <= current_Y_count[30].DB_MAX_OUTPUT_PORT_TYPE
VGA_HS_out <= VGA_HS_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_VS_out <= VGA_VS_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_R_out[0] <= VGA_R_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_R_out[1] <= VGA_R_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_R_out[2] <= VGA_R_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_R_out[3] <= VGA_R_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_G_out[0] <= VGA_G_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_G_out[1] <= VGA_G_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_G_out[2] <= VGA_G_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_G_out[3] <= VGA_G_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_B_out[0] <= VGA_B_out[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_B_out[1] <= VGA_B_out[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_B_out[2] <= VGA_B_out[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
VGA_B_out[3] <= VGA_B_out[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DE10_LITE|IO:INandOUT
CLK => ~NO_FANOUT~
RESET_n => ~NO_FANOUT~
KEY[0] => push_reset_n_sig.IN0
KEY[1] => push_reset_n_sig.IN1
SW[0] => ~NO_FANOUT~
SW[1] => ~NO_FANOUT~
SW[2] => ~NO_FANOUT~
SW[3] => ~NO_FANOUT~
SW[4] => ~NO_FANOUT~
SW[5] => ~NO_FANOUT~
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
SW[9] => ~NO_FANOUT~
LEDR[0] <= push_reset_n_sig.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= <GND>
LEDR[2] <= <GND>
LEDR[3] <= <GND>
LEDR[4] <= <GND>
LEDR[5] <= <GND>
LEDR[6] <= <GND>
LEDR[7] <= <GND>
LEDR[8] <= <GND>
LEDR[9] <= <GND>
GPIO[35] <> <UNC>
GPIO[34] <> <UNC>
GPIO[33] <> <UNC>
GPIO[32] <> <UNC>
GPIO[31] <> <UNC>
GPIO[30] <> <UNC>
GPIO[29] <> <UNC>
GPIO[28] <> <UNC>
GPIO[27] <> <UNC>
GPIO[26] <> <UNC>
GPIO[25] <> <UNC>
GPIO[24] <> <UNC>
GPIO[23] <> <UNC>
GPIO[22] <> <UNC>
GPIO[21] <> <UNC>
GPIO[20] <> <UNC>
GPIO[19] <> <UNC>
GPIO[18] <> <UNC>
GPIO[17] <> <UNC>
GPIO[16] <> <UNC>
GPIO[15] <> <UNC>
GPIO[14] <> <UNC>
GPIO[13] <> <UNC>
GPIO[12] <> <UNC>
GPIO[11] <> <UNC>
GPIO[10] <> <UNC>
GPIO[9] <> <UNC>
GPIO[8] <> <UNC>
GPIO[7] <> <UNC>
GPIO[6] <> <UNC>
GPIO[5] <> <UNC>
GPIO[4] <> <UNC>
GPIO[3] <> <UNC>
GPIO[2] <> <UNC>
GPIO[1] <> <UNC>
GPIO[0] <> <UNC>
HEX0[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
HEX0[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
HEX0[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
HEX0[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
HEX0[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
HEX0[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
HEX0[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
HEX0[7] <= <VCC>
HEX1[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
HEX1[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
HEX1[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
HEX1[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
HEX1[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
HEX1[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
HEX1[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
HEX1[7] <= <VCC>
HEX2[0] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
HEX2[1] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
HEX2[2] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
HEX2[3] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
HEX2[4] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE
HEX2[5] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
HEX2[6] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
HEX2[7] <= <VCC>
HEX3[0] <= <VCC>
HEX3[1] <= <VCC>
HEX3[2] <= <VCC>
HEX3[3] <= <VCC>
HEX3[4] <= <VCC>
HEX3[5] <= <VCC>
HEX3[6] <= <VCC>
HEX3[7] <= <VCC>
HEX4[0] <= <VCC>
HEX4[1] <= <VCC>
HEX4[2] <= <VCC>
HEX4[3] <= <VCC>
HEX4[4] <= <VCC>
HEX4[5] <= <VCC>
HEX4[6] <= <VCC>
HEX4[7] <= <VCC>
HEX5[0] <= <VCC>
HEX5[1] <= <VCC>
HEX5[2] <= <VCC>
HEX5[3] <= <VCC>
HEX5[4] <= <VCC>
HEX5[5] <= <VCC>
HEX5[6] <= <VCC>
HEX5[7] <= <VCC>
push_reset_n <= push_reset_n_sig.DB_MAX_OUTPUT_PORT_TYPE
ADC_CH1_value_i[0] => ~NO_FANOUT~
ADC_CH1_value_i[1] => ~NO_FANOUT~
ADC_CH1_value_i[2] => ~NO_FANOUT~
ADC_CH1_value_i[3] => ~NO_FANOUT~
ADC_CH1_value_i[4] => ~NO_FANOUT~
ADC_CH1_value_i[5] => ~NO_FANOUT~
ADC_CH1_value_i[6] => ~NO_FANOUT~
ADC_CH1_value_i[7] => ~NO_FANOUT~
ADC_CH1_value_i[8] => ~NO_FANOUT~
ADC_CH1_value_i[9] => ~NO_FANOUT~
ADC_CH1_value_i[10] => ~NO_FANOUT~
ADC_CH1_value_i[11] => ~NO_FANOUT~
ADC_CH1_value_i[12] => ~NO_FANOUT~
ADC_CH1_value_i[13] => ~NO_FANOUT~
ADC_CH1_value_i[14] => ~NO_FANOUT~
ADC_CH1_value_i[15] => ~NO_FANOUT~
ADC_CH1_value_i[16] => ~NO_FANOUT~
ADC_CH1_value_i[17] => ~NO_FANOUT~
ADC_CH1_value_i[18] => ~NO_FANOUT~
ADC_CH1_value_i[19] => ~NO_FANOUT~
ADC_CH1_value_i[20] => ~NO_FANOUT~
ADC_CH1_value_i[21] => ~NO_FANOUT~
ADC_CH1_value_i[22] => ~NO_FANOUT~
ADC_CH1_value_i[23] => ~NO_FANOUT~
ADC_CH1_value_i[24] => ~NO_FANOUT~
ADC_CH1_value_i[25] => ~NO_FANOUT~
ADC_CH1_value_i[26] => ~NO_FANOUT~
ADC_CH1_value_i[27] => ~NO_FANOUT~
ADC_CH1_value_i[28] => ~NO_FANOUT~
ADC_CH1_value_i[29] => ~NO_FANOUT~
ADC_CH1_value_i[30] => ~NO_FANOUT~
ADC_CH1_value_unsig[0] => Mux0.IN19
ADC_CH1_value_unsig[0] => Mux1.IN19
ADC_CH1_value_unsig[0] => Mux2.IN19
ADC_CH1_value_unsig[0] => Mux3.IN19
ADC_CH1_value_unsig[0] => Mux4.IN19
ADC_CH1_value_unsig[0] => Mux5.IN19
ADC_CH1_value_unsig[0] => Mux6.IN19
ADC_CH1_value_unsig[1] => Mux0.IN18
ADC_CH1_value_unsig[1] => Mux1.IN18
ADC_CH1_value_unsig[1] => Mux2.IN18
ADC_CH1_value_unsig[1] => Mux3.IN18
ADC_CH1_value_unsig[1] => Mux4.IN18
ADC_CH1_value_unsig[1] => Mux5.IN18
ADC_CH1_value_unsig[1] => Mux6.IN18
ADC_CH1_value_unsig[2] => Mux0.IN17
ADC_CH1_value_unsig[2] => Mux1.IN17
ADC_CH1_value_unsig[2] => Mux2.IN17
ADC_CH1_value_unsig[2] => Mux3.IN17
ADC_CH1_value_unsig[2] => Mux4.IN17
ADC_CH1_value_unsig[2] => Mux5.IN17
ADC_CH1_value_unsig[2] => Mux6.IN17
ADC_CH1_value_unsig[3] => Mux0.IN16
ADC_CH1_value_unsig[3] => Mux1.IN16
ADC_CH1_value_unsig[3] => Mux2.IN16
ADC_CH1_value_unsig[3] => Mux3.IN16
ADC_CH1_value_unsig[3] => Mux4.IN16
ADC_CH1_value_unsig[3] => Mux5.IN16
ADC_CH1_value_unsig[3] => Mux6.IN16
ADC_CH1_value_unsig[4] => Mux7.IN19
ADC_CH1_value_unsig[4] => Mux8.IN19
ADC_CH1_value_unsig[4] => Mux9.IN19
ADC_CH1_value_unsig[4] => Mux10.IN19
ADC_CH1_value_unsig[4] => Mux11.IN19
ADC_CH1_value_unsig[4] => Mux12.IN19
ADC_CH1_value_unsig[4] => Mux13.IN19
ADC_CH1_value_unsig[5] => Mux7.IN18
ADC_CH1_value_unsig[5] => Mux8.IN18
ADC_CH1_value_unsig[5] => Mux9.IN18
ADC_CH1_value_unsig[5] => Mux10.IN18
ADC_CH1_value_unsig[5] => Mux11.IN18
ADC_CH1_value_unsig[5] => Mux12.IN18
ADC_CH1_value_unsig[5] => Mux13.IN18
ADC_CH1_value_unsig[6] => Mux7.IN17
ADC_CH1_value_unsig[6] => Mux8.IN17
ADC_CH1_value_unsig[6] => Mux9.IN17
ADC_CH1_value_unsig[6] => Mux10.IN17
ADC_CH1_value_unsig[6] => Mux11.IN17
ADC_CH1_value_unsig[6] => Mux12.IN17
ADC_CH1_value_unsig[6] => Mux13.IN17
ADC_CH1_value_unsig[7] => Mux7.IN16
ADC_CH1_value_unsig[7] => Mux8.IN16
ADC_CH1_value_unsig[7] => Mux9.IN16
ADC_CH1_value_unsig[7] => Mux10.IN16
ADC_CH1_value_unsig[7] => Mux11.IN16
ADC_CH1_value_unsig[7] => Mux12.IN16
ADC_CH1_value_unsig[7] => Mux13.IN16
ADC_CH1_value_unsig[8] => Mux14.IN19
ADC_CH1_value_unsig[8] => Mux15.IN19
ADC_CH1_value_unsig[8] => Mux16.IN19
ADC_CH1_value_unsig[8] => Mux17.IN19
ADC_CH1_value_unsig[8] => Mux18.IN19
ADC_CH1_value_unsig[8] => Mux19.IN19
ADC_CH1_value_unsig[8] => Mux20.IN19
ADC_CH1_value_unsig[9] => Mux14.IN18
ADC_CH1_value_unsig[9] => Mux15.IN18
ADC_CH1_value_unsig[9] => Mux16.IN18
ADC_CH1_value_unsig[9] => Mux17.IN18
ADC_CH1_value_unsig[9] => Mux18.IN18
ADC_CH1_value_unsig[9] => Mux19.IN18
ADC_CH1_value_unsig[9] => Mux20.IN18
ADC_CH1_value_unsig[10] => Mux14.IN17
ADC_CH1_value_unsig[10] => Mux15.IN17
ADC_CH1_value_unsig[10] => Mux16.IN17
ADC_CH1_value_unsig[10] => Mux17.IN17
ADC_CH1_value_unsig[10] => Mux18.IN17
ADC_CH1_value_unsig[10] => Mux19.IN17
ADC_CH1_value_unsig[10] => Mux20.IN17
ADC_CH1_value_unsig[11] => Mux14.IN16
ADC_CH1_value_unsig[11] => Mux15.IN16
ADC_CH1_value_unsig[11] => Mux16.IN16
ADC_CH1_value_unsig[11] => Mux17.IN16
ADC_CH1_value_unsig[11] => Mux18.IN16
ADC_CH1_value_unsig[11] => Mux19.IN16
ADC_CH1_value_unsig[11] => Mux20.IN16


